parameters:
  - name: stages
    type: object
    default:
      - name: dev
        other: a
      - name: test
        other: b
        previous: dev
      - name: prod
        other: $(myvar)
        previous: test

trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  myvar: var_c

stages:
  - ${{ each stage in parameters.stages }}:
      - stage: ${{ stage.name }}
        displayName: Build ${{ stage.name }} # Can't use Macro $(example) or Runtime $[variables.example] here
        dependsOn:
          - ${{ if ne(stage.previous, '') }}:
              - ${{ stage.previous }}

        variables:
          - template: variables-${{ stage.name }}.yml

        jobs:
          - job: Build
            ${{ if eq(stage.name, 'dev') }}:
              displayName: "Build ${{ variables.example }} dev"
            ${{ else }}:
              displayName: "Build ${{ variables.example }} not dev"

            pool:
              ${{ if eq(stage.name, 'dev') }}:
                vmImage: ubuntu-latest
              ${{ elseif eq(stage.name, 'test') }}:
                vmImage: windows-latest
              ${{ else }}:
                vmImage: macos-latest

            steps:
              - checkout: none
              - ${{ if eq(stage.name, 'dev') }}:
                  - script: echo Build started on `date`
                    displayName: "Just Dev"

              - script: echo Build completed on `date`
                displayName: "${{ stage.other }}"

  - stage: Single
    dependsOn: []
    jobs:
      - job: Single
        steps:
          - checkout: none
          - script: |
              echo "parameters.stages[0].name: ${{ parameters.stages[0].name }}"
              echo "parameters.stages['test'].name: ${{ parameters.stages['test'].name }}"
